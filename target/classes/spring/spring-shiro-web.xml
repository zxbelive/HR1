<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <description>apache shiro配置</description>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
     
        <property name="securityManager" ref="securityManager"/>         
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/employee/checkLogin.do"/>
        <!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
       <!--   <property name="successUrl" value="/rest/index"/>-->
        <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面 -->
        <property name="unauthorizedUrl" value="/employee/unauthorized.do"/>
         
        <property name="filterChainDefinitions">       
            <value>
                <!-- 静态资源允许访问 -->
                /css/** = anon
                /dist/** = anon
                /fonts/** = anon
                /img/** = anon
                /js/** = anon
                <!-- 登录页允许访问 -->
                /employee/login.do = anon
                /employee/checkLogin.do = anon
                /employee/captcha.do = anon
                /login.jsp = anon
                /employee/unauthorized.do = anon
                <!-- 其他资源需要认证 -->
                <!--  /** = authc  -->
                /** = user
               
            </value>
        </property>
    </bean>


     <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>    
 
     <bean id="credentialsMatcher" class="edu.hebeu.security.CustomCredentialsMatcher">
         <constructor-arg ref="shiroEhcacheManager" />
         
          <property name="hashAlgorithmName" value="md5" />
          <property name="hashIterations" value="1" />
          <property name="storedCredentialsHexEncoded" value="true" />
        
     </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>


    
    <!-- 记住密码Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe"/>
        <!-- 1天,采用spring el表达式来计算，方便修改 -->
        <property name="maxAge" value="#{1 * 24 * 60 * 60}"/>
       <!--  <property name="domain" value=".yzixi.com"/>  -->
    </bean>

    <!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>  
    </bean>


    <bean id="securityRealm" class="edu.hebeu.security.SecurityRealm" >  
   	   <property name="cachingEnabled" value="true"/>     
       <property name="credentialsMatcher" ref="credentialsMatcher" /> 
       
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        
        <property name="realms" ref="securityRealm"/>
        <!-- 
        <property name="realms">
            <list>
                <ref bean="securityRealm"/>
            </list>
        </property>
         --> 
        <!-- cacheManager,集合spring缓存工厂 -->
        
        <property name="cacheManager" ref="shiroEhcacheManager" />
        <property name="sessionManager" ref="sessionManager" /> 
        
        <!-- 配置记住我 -->
        <property name="rememberMeManager" ref="rememberMeManager"></property>
    </bean>
    


	<!--shiro缓存管理器,用户授权信息Cache，缓存在本机内存，不支持集群-->
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>


    <!-- Shiro生命周期处理器 -->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <!--启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用. -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
          <!--depends-on="lifecycleBeanPostProcessor">-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->

    <!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 -->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager" />-->
    <!--</bean>-->

    <!-- shiro为集成spring -->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--&lt;!&ndash; 无权限跳转到登陆页，可自行定义 &ndash;&gt;-->
                <!--<prop key="org.apache.shiro.authz.UnauthorizedException">error/error</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

</beans>